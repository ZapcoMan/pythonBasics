{
    "code": 0,
    "data": {
        "records": [
            {
                "id": "1780933295236739074",
                "questionNum": "538",
                "title": "Java 中有哪些垃圾回收算法？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 12630,
                "thumbNum": 0,
                "favourNum": 261,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 0,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:31:01",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "oxpxx5",
                "fileId": "1397757912704754478",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295253516289",
                "questionNum": "543",
                "title": "JVM 的 TLAB（Thread-Local Allocation Buffer）是什么？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 8832,
                "thumbNum": 0,
                "favourNum": 96,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 0,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 23:06:15",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "vvpkrf",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295157047297",
                "questionNum": "521",
                "title": "Java 是如何实现跨平台的？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 10106,
                "thumbNum": 0,
                "favourNum": 46,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 20:49:02",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "4tnm42",
                "hasChoiceQuestion": true
            },
            {
                "id": "1854787878122102785",
                "questionNum": "9807",
                "title": "JVM 由哪些部分组成？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 7407,
                "thumbNum": 0,
                "favourNum": 195,
                "reviewStatus": 1,
                "needVip": 1,
                "userId": "1783388929455529986",
                "createTime": "2024-11-08 15:27:45",
                "updateTime": "2025-06-25 22:57:29",
                "tagList": [
                    "后端",
                    "Java",
                    "JVM"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "gvoiuy",
                "fileId": "1397757900669747970",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295161241602",
                "questionNum": "522",
                "title": "编译执行与解释执行的区别是什么？JVM 使用哪种方式？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 7568,
                "thumbNum": 0,
                "favourNum": 88,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:13:53",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "vzs2rp",
                "fileId": "1397757900241177835",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295169630210",
                "questionNum": "523",
                "title": "JVM 的内存区域是如何划分的？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 9638,
                "thumbNum": 0,
                "favourNum": 326,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:38:31",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "jqmjfk",
                "fileId": "1397757900686979235",
                "hasChoiceQuestion": true
            },
            {
                "id": "1854818978466832386",
                "questionNum": "9808",
                "title": "JVM 方法区是否会出现内存溢出?",
                "difficulty": 1,
                "contentType": 0,
                "viewNum": 4339,
                "thumbNum": 0,
                "favourNum": 24,
                "reviewStatus": 1,
                "needVip": 1,
                "userId": "1783388929455529986",
                "createTime": "2024-11-08 17:31:20",
                "updateTime": "2025-06-25 21:27:50",
                "tagList": [
                    "后端",
                    "Java",
                    "JVM"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "m8rzyo",
                "hasChoiceQuestion": true
            },
            {
                "id": "1855856573426638849",
                "questionNum": "9811",
                "title": "JVM 有那几种情况会产生 OOM（内存溢出）？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 5616,
                "thumbNum": 0,
                "favourNum": 149,
                "reviewStatus": 1,
                "needVip": 1,
                "userId": "1783388929455529986",
                "createTime": "2024-11-11 14:14:21",
                "updateTime": "2025-06-25 22:59:43",
                "tagList": [
                    "后端",
                    "Java",
                    "JVM"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "oiw6ja",
                "fileId": "1397757900240805158",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295173824513",
                "questionNum": "524",
                "title": "Java 中堆和栈的区别是什么？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 7382,
                "thumbNum": 0,
                "favourNum": 101,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:53:04",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "k6zn32",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295178018817",
                "questionNum": "525",
                "title": "什么是 Java 中的直接内存（堆外内存）？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 6060,
                "thumbNum": 0,
                "favourNum": 74,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:52:32",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "hfj0z9",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295182213122",
                "questionNum": "526",
                "title": "什么是 Java 中的常量池？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 6077,
                "thumbNum": 0,
                "favourNum": 103,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 17:23:27",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "2v3y98",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295186407425",
                "questionNum": "527",
                "title": "你了解 Java 的类加载器吗？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 8718,
                "thumbNum": 0,
                "favourNum": 196,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:47:37",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "afhl6m",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295194796033",
                "questionNum": "529",
                "title": "什么是 Java 中的 JIT（Just-In-Time）?",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 7564,
                "thumbNum": 0,
                "favourNum": 72,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:18:53",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "bu14rm",
                "hasChoiceQuestion": true
            },
            {
                "id": "1863492785508106242",
                "questionNum": "10729",
                "title": "JIT 编译后的代码存在哪？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 2458,
                "thumbNum": 0,
                "favourNum": 16,
                "reviewStatus": 1,
                "needVip": 1,
                "userId": "1783388929455529986",
                "createTime": "2024-12-02 15:57:56",
                "updateTime": "2025-06-25 20:26:28",
                "tagList": [
                    "Java",
                    "JVM"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "xvlway",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295194796034",
                "questionNum": "530",
                "title": "什么是 Java 的 AOT（Ahead-Of-Time）？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 6163,
                "thumbNum": 0,
                "favourNum": 65,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:19:49",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "b66b1e",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295198990337",
                "questionNum": "531",
                "title": "你了解 Java 的逃逸分析吗？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 4972,
                "thumbNum": 0,
                "favourNum": 104,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 19:06:00",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "gpt0j1",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295211573249",
                "questionNum": "532",
                "title": "Java 中的强引用、软引用、弱引用和虚引用分别是什么？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 6526,
                "thumbNum": 0,
                "favourNum": 137,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:33:30",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "gz61vw",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295215767553",
                "questionNum": "533",
                "title": "Java 中常见的垃圾收集器有哪些？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 6778,
                "thumbNum": 0,
                "favourNum": 315,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 23:00:21",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "e440lz",
                "fileId": "1397757900686980052",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295219961858",
                "questionNum": "534",
                "title": "Java 中如何判断对象是否是垃圾？不同实现方式有何区别？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 5315,
                "thumbNum": 0,
                "favourNum": 119,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 19:10:02",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "qyay8a",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295224156162",
                "questionNum": "535",
                "title": "为什么 Java 的垃圾收集器将堆分为老年代和新生代？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 4709,
                "thumbNum": 0,
                "favourNum": 93,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:25:11",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "k37ntn",
                "hasChoiceQuestion": true
            }
        ],
        "total": "46",
        "size": "20",
        "current": "1",
        "orders": [],
        "optimizeCountSql": true,
        "searchCount": true,
        "pages": "3"
    },
    "message": "ok"
}
{
    "code": 0,
    "data": {
        "records": [
            {
                "id": "1780933295228350466",
                "questionNum": "536",
                "title": "为什么 Java 8 移除了永久代（PermGen）并引入了元空间（Metaspace）？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 11153,
                "thumbNum": 0,
                "favourNum": 166,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 23:01:39",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "xm35dz",
                "fileId": "1397757900612135425",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295232544769",
                "questionNum": "537",
                "title": "为什么 Java 新生代被划分为 S0、S1 和 Eden 区？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 4938,
                "thumbNum": 0,
                "favourNum": 87,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "source": "",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:11:09",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "4oqks2",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295236739075",
                "questionNum": "539",
                "title": "什么是三色标记算法？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 4635,
                "thumbNum": 0,
                "favourNum": 84,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 20:49:46",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "80erp5",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295240933377",
                "questionNum": "540",
                "title": "Java 中的 young GC、old GC、full GC 和 mixed GC 的区别是什么？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 4915,
                "thumbNum": 0,
                "favourNum": 102,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:04:31",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "e4lfwr",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295245127682",
                "questionNum": "541",
                "title": "什么条件会触发 Java 的 young GC？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 4200,
                "thumbNum": 0,
                "favourNum": 43,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 20:32:42",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "32sy8f",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295249321986",
                "questionNum": "542",
                "title": "什么情况下会触发 Java 的 Full GC？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 4298,
                "thumbNum": 0,
                "favourNum": 90,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 18:15:35",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "lu2z87",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295257710593",
                "questionNum": "544",
                "title": "什么是 Java 的 PLAB？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 3417,
                "thumbNum": 0,
                "favourNum": 51,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 20:32:45",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "nzgt90",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295261904897",
                "questionNum": "545",
                "title": "JVM 垃圾回收时产生的 concurrent mode failure 的原因是什么？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 5076,
                "thumbNum": 0,
                "favourNum": 52,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 19:24:57",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "d4j6ln",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295266099202",
                "questionNum": "546",
                "title": "为什么 Java 中 CMS 垃圾收集器在发生 Concurrent Mode Failure 时的 Full GC 是单线程的？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 3390,
                "thumbNum": 0,
                "favourNum": 17,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 20:32:52",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "rskmun",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295270293506",
                "questionNum": "547",
                "title": "为什么 Java 中某些新生代和老年代的垃圾收集器不能组合使用？比如 ParNew 和 Parallel Old",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 3161,
                "thumbNum": 0,
                "favourNum": 13,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:43:39",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "fo8lwd",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295274487810",
                "questionNum": "548",
                "title": "JVM 新生代垃圾回收如何避免全堆扫描？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 3331,
                "thumbNum": 0,
                "favourNum": 87,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 20:33:03",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "iqm0ta",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295274487811",
                "questionNum": "549",
                "title": "Java 的 CMS 垃圾回收器和 G1 垃圾回收器在记忆集的维护上有什么不同？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 3504,
                "thumbNum": 0,
                "favourNum": 51,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:34:48",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "8kkqt8",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295278682114",
                "questionNum": "550",
                "title": "为什么 G1 垃圾收集器不维护年轻代到老年代的记忆集？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 2953,
                "thumbNum": 0,
                "favourNum": 19,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 17:19:09",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "ezojc6",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295282876417",
                "questionNum": "551",
                "title": "Java 中的 CMS 和 G1 垃圾收集器如何维持并发的正确性？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 3023,
                "thumbNum": 0,
                "favourNum": 61,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 15:16:10",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "ic141p",
                "hasChoiceQuestion": true
            },
            {
                "id": "1889260086154088449",
                "questionNum": "11176",
                "title": "Java G1 相对于 CMS 有哪些进步的地方?",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 2732,
                "thumbNum": 0,
                "favourNum": 39,
                "reviewStatus": 1,
                "needVip": 1,
                "userId": "1783388929455529986",
                "createTime": "2025-02-11 18:27:59",
                "updateTime": "2025-06-25 21:56:36",
                "tagList": [
                    "Java",
                    "JVM"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "h0pdko",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295287070722",
                "questionNum": "552",
                "title": "什么是 Java 中的 logging write barrier？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 2509,
                "thumbNum": 0,
                "favourNum": 33,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 16:21:08",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "q3ug3a",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295291265026",
                "questionNum": "553",
                "title": "Java 的 G1 垃圾回收流程是怎样的？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 4434,
                "thumbNum": 0,
                "favourNum": 98,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:04:19",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "x9gh4h",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295291265027",
                "questionNum": "554",
                "title": "Java 的 CMS 垃圾回收流程是怎样的？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 3521,
                "thumbNum": 0,
                "favourNum": 77,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 18:55:08",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "n07d2b",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295295459330",
                "questionNum": "555",
                "title": "你了解 Java 的 ZGC（Z Garbage Collector）吗？",
                "difficulty": 5,
                "contentType": 0,
                "viewNum": 3004,
                "thumbNum": 0,
                "favourNum": 59,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 16:52:03",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "hj53g9",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295303847937",
                "questionNum": "557",
                "title": "JVM 垃圾回收调优的主要目标是什么？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 5120,
                "thumbNum": 0,
                "favourNum": 111,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 23:05:04",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "pwlf27",
                "fileId": "1397757900242002216",
                "hasChoiceQuestion": true
            }
        ],
        "total": "46",
        "size": "20",
        "current": "2",
        "orders": [],
        "optimizeCountSql": true,
        "searchCount": true,
        "pages": "3"
    },
    "message": "ok"
}
{
    "code": 0,
    "data": {
        "records": [
            {
                "id": "1780933295308042242",
                "questionNum": "558",
                "title": "如何对 Java 的垃圾回收进行调优？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 5303,
                "thumbNum": 0,
                "favourNum": 167,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 23:06:55",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "9vfniw",
                "fileId": "1397757900237246565",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295312236546",
                "questionNum": "559",
                "title": "常用的 JVM 配置参数有哪些？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 5589,
                "thumbNum": 0,
                "favourNum": 178,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:55:38",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "lrvx7l",
                "fileId": "1397757900678367228",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295312236547",
                "questionNum": "560",
                "title": "你常用哪些工具来分析 JVM 性能？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 4624,
                "thumbNum": 0,
                "favourNum": 116,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 22:37:46",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "yfdu4m",
                "hasChoiceQuestion": true
            },
            {
                "id": "1780933295316430850",
                "questionNum": "561",
                "title": "如何在 Java 中进行内存泄漏分析？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 4461,
                "thumbNum": 0,
                "favourNum": 112,
                "reviewStatus": 1,
                "reviewerId": "1770744203760979970",
                "reviewTime": "2024-04-18 20:10:00",
                "needVip": 1,
                "userId": "1770744203760979970",
                "createTime": "2024-04-18 20:16:00",
                "updateTime": "2025-06-25 21:33:42",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "2bkrzt",
                "hasChoiceQuestion": true
            },
            {
                "id": "1863464201980657666",
                "questionNum": "10728",
                "title": "Java 里的对象在虚拟机里面是怎么存储的？",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 2180,
                "thumbNum": 0,
                "favourNum": 42,
                "reviewStatus": 1,
                "needVip": 1,
                "userId": "1783388929455529986",
                "createTime": "2024-12-02 14:04:21",
                "updateTime": "2025-06-25 17:20:39",
                "tagList": [
                    "Java",
                    "JVM"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "y6wvw8",
                "hasChoiceQuestion": true
            },
            {
                "id": "1864573924108845058",
                "questionNum": "10734",
                "title": "说说 Java 的执行流程?",
                "difficulty": 3,
                "contentType": 0,
                "viewNum": 2791,
                "thumbNum": 0,
                "favourNum": 49,
                "reviewStatus": 1,
                "needVip": 1,
                "userId": "1783388929455529986",
                "createTime": "2024-12-05 15:34:00",
                "updateTime": "2025-06-25 17:37:56",
                "tagList": [
                    "JVM",
                    "Java"
                ],
                "hasVipAuth": false,
                "hasBestAnswer": false,
                "hasAnswer": false,
                "isNew": false,
                "shareCode": "62vob7",
                "hasChoiceQuestion": true
            }
        ],
        "total": "46",
        "size": "20",
        "current": "3",
        "orders": [],
        "optimizeCountSql": true,
        "searchCount": true,
        "pages": "3"
    },
    "message": "ok"
}
{
    "code": 0,
    "data": {
        "records": [],
        "total": "46",
        "size": "20",
        "current": "4",
        "orders": [],
        "optimizeCountSql": true,
        "searchCount": true,
        "pages": "3"
    },
    "message": "ok"
}
