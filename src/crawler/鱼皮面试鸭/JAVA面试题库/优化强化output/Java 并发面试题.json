[
    {
        "code": 0,
        "data": {
            "records": [
                {
                    "id": "1800347821641375745",
                    "questionNum": "944",
                    "title": "什么是 Java 中的线程同步？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 18133,
                    "thumbNum": 0,
                    "favourNum": 162,
                    "reviewStatus": 1,
                    "reviewerId": "1772087337535152129",
                    "reviewTime": "2024-06-14 10:46:35",
                    "needVip": 0,
                    "userId": "1783393747989405698",
                    "createTime": "2024-06-11 10:02:24",
                    "updateTime": "2025-06-26 11:10:43",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "fd0tlm",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294850863106",
                    "questionNum": "466",
                    "title": "Java 中的线程安全是什么意思？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 18483,
                    "thumbNum": 0,
                    "favourNum": 172,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:12:04",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "ik8rza",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294863446018",
                    "questionNum": "468",
                    "title": "什么是协程？Java 支持协程吗？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 14688,
                    "thumbNum": 0,
                    "favourNum": 178,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:23:11",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "kzwn9s",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294871834626",
                    "questionNum": "469",
                    "title": "线程的生命周期在 Java 中是如何定义的？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 15265,
                    "thumbNum": 0,
                    "favourNum": 269,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:24:14",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "1o8gb9",
                    "fileId": "1397757900242379839",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294876028930",
                    "questionNum": "470",
                    "title": "Java 中线程之间如何进行通信？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 13599,
                    "thumbNum": 0,
                    "favourNum": 218,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:14:13",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "fonxg6",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1828722732530307073",
                    "questionNum": "5919",
                    "title": "Java 中如何创建多线程？",
                    "difficulty": 1,
                    "contentType": 0,
                    "viewNum": 13962,
                    "thumbNum": 0,
                    "favourNum": 345,
                    "reviewStatus": 1,
                    "needVip": 0,
                    "userId": "1783388929455529986",
                    "createTime": "2024-08-28 17:14:10",
                    "updateTime": "2025-06-26 10:52:16",
                    "tagList": [
                        "后端",
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "mugoil",
                    "fileId": "1397757900239808159",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294892806145",
                    "questionNum": "472",
                    "title": "你了解 Java 线程池的原理吗？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 17141,
                    "thumbNum": 0,
                    "favourNum": 493,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:13:05",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "7zhf09",
                    "fileId": "1397757902896221294",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294905389057",
                    "questionNum": "474",
                    "title": "如何合理地设置 Java 线程池的线程数？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 13846,
                    "thumbNum": 0,
                    "favourNum": 236,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:37:52",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "xh00w6",
                    "fileId": "1397757900239574747",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294909583361",
                    "questionNum": "475",
                    "title": "Java 线程池有哪些拒绝策略？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 13854,
                    "thumbNum": 0,
                    "favourNum": 317,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:36:59",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "4v2qni",
                    "fileId": "1397757900242381614",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294913777665",
                    "questionNum": "476",
                    "title": "Java 并发库中提供了哪些线程池实现？它们有什么区别？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 12124,
                    "thumbNum": 0,
                    "favourNum": 307,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:00:06",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "epk97n",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1830885090747584514",
                    "questionNum": "5931",
                    "title": "Java 线程池核心线程数在运行过程中能修改吗？如何修改？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 10199,
                    "thumbNum": 0,
                    "favourNum": 148,
                    "reviewStatus": 1,
                    "reviewerId": "1783388929455529986",
                    "reviewTime": "2024-09-10 15:55:03",
                    "needVip": 0,
                    "userId": "1822811596798599170",
                    "createTime": "2024-09-03 16:26:36",
                    "updateTime": "2025-06-26 11:15:09",
                    "tagList": [
                        "后端",
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "m39e2o",
                    "fileId": "1397757900669714795",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1828628096288522241",
                    "questionNum": "5901",
                    "title": "Java 线程池中 shutdown 与 shutdownNow 的区别是什么？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 8344,
                    "thumbNum": 0,
                    "favourNum": 77,
                    "reviewStatus": 1,
                    "needVip": 0,
                    "userId": "1783388929455529986",
                    "createTime": "2024-08-28 10:58:07",
                    "updateTime": "2025-06-26 11:08:46",
                    "tagList": [
                        "后端",
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "olr3gt",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1828365977491333121",
                    "questionNum": "5896",
                    "title": "Java 线程池内部任务出异常后，如何知道是哪个线程出了异常？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 9954,
                    "thumbNum": 0,
                    "favourNum": 214,
                    "reviewStatus": 1,
                    "needVip": 1,
                    "userId": "1783388929455529986",
                    "createTime": "2024-08-27 17:36:33",
                    "updateTime": "2025-06-26 10:48:55",
                    "tagList": [
                        "后端",
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "86o4o2",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294917971970",
                    "questionNum": "477",
                    "title": "Java 中的 DelayQueue 和 ScheduledThreadPool 有什么区别？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 8644,
                    "thumbNum": 0,
                    "favourNum": 126,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:16:05",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "1925un",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294922166273",
                    "questionNum": "478",
                    "title": "什么是 Java 的 Timer？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 8619,
                    "thumbNum": 0,
                    "favourNum": 80,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:03:06",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "bnvkb8",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294926360578",
                    "questionNum": "479",
                    "title": "你了解时间轮（Time Wheel）吗？有哪些应用场景？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 8593,
                    "thumbNum": 0,
                    "favourNum": 130,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "source": "",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:10:20",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "j3ogx3",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294930554882",
                    "questionNum": "480",
                    "title": "你使用过哪些 Java 并发工具类？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 12351,
                    "thumbNum": 0,
                    "favourNum": 290,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:11:55",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "crqoam",
                    "fileId": "1397757901655624509",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294934749186",
                    "questionNum": "481",
                    "title": "什么是 Java 的 Semaphore？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 8499,
                    "thumbNum": 0,
                    "favourNum": 88,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:13:20",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "k099ma",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294938943489",
                    "questionNum": "482",
                    "title": "什么是 Java 的 CyclicBarrier？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 7408,
                    "thumbNum": 0,
                    "favourNum": 98,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-25 23:24:04",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "td9pi9",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294943137794",
                    "questionNum": "483",
                    "title": "什么是 Java 的 CountDownLatch？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7661,
                    "thumbNum": 0,
                    "favourNum": 102,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:42:19",
                    "tagList": [
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "ynakon",
                    "hasChoiceQuestion": true
                }
            ],
            "total": "62",
            "size": "20",
            "current": "1",
            "orders": [],
            "optimizeCountSql": true,
            "searchCount": true,
            "pages": "4"
        },
        "message": "ok"
    },
    {
        "code": 0,
        "data": {
            "records": [
                {
                    "id": "1780933294947332098",
                    "questionNum": "484",
                    "title": "什么是 Java 的 StampedLock？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7183,
                    "thumbNum": 0,
                    "favourNum": 120,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 09:29:17",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "vjsc3v",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294951526402",
                    "questionNum": "485",
                    "title": "什么是 Java 的 CompletableFuture？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 8124,
                    "thumbNum": 0,
                    "favourNum": 248,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-25 23:24:58",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "4obvuj",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294955720706",
                    "questionNum": "486",
                    "title": "什么是 Java 的 ForkJoinPool？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 6360,
                    "thumbNum": 0,
                    "favourNum": 99,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-25 23:25:04",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "1rtk8k",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294959915009",
                    "questionNum": "487",
                    "title": "如何在 Java 中控制多个线程的执行顺序？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 8640,
                    "thumbNum": 0,
                    "favourNum": 190,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:13:38",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "klyuko",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294964109313",
                    "questionNum": "488",
                    "title": "你使用过 Java 中的哪些阻塞队列？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 8318,
                    "thumbNum": 0,
                    "favourNum": 156,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:42:29",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "xfxq0q",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294968303618",
                    "questionNum": "489",
                    "title": "你使用过 Java 中的哪些原子类？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7490,
                    "thumbNum": 0,
                    "favourNum": 108,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:38:23",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "a2tgg8",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294972497922",
                    "questionNum": "490",
                    "title": "你使用过 Java 的累加器吗？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 6728,
                    "thumbNum": 0,
                    "favourNum": 74,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:50:13",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "48f8g0",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295027023873",
                    "questionNum": "500",
                    "title": "什么是 Java 的 CAS（Compare-And-Swap）操作？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 12798,
                    "thumbNum": 0,
                    "favourNum": 381,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:39:19",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "oodgbb",
                    "fileId": "1397757900240800869",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295018635266",
                    "questionNum": "498",
                    "title": "说说 AQS 吧？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 12894,
                    "thumbNum": 0,
                    "favourNum": 470,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:08:28",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "3hvnxt",
                    "fileId": "1397757901673470421",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295014440961",
                    "questionNum": "497",
                    "title": "Java 中 ReentrantLock 的实现原理是什么？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 10389,
                    "thumbNum": 0,
                    "favourNum": 376,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:43:37",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "eg73vt",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294980886530",
                    "questionNum": "492",
                    "title": "Java 的 synchronized 是怎么实现的？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 12086,
                    "thumbNum": 0,
                    "favourNum": 537,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:05:06",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "9hxcoe",
                    "fileId": "1397757900613158368",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1848537245758205954",
                    "questionNum": "9495",
                    "title": "Synchronized 修饰静态方法和修饰普通方法有什么区别？",
                    "difficulty": 1,
                    "contentType": 0,
                    "viewNum": 1673,
                    "thumbNum": 0,
                    "favourNum": 9,
                    "reviewStatus": 1,
                    "reviewerId": "1903103654707298305",
                    "reviewTime": "2025-04-11 15:23:28",
                    "needVip": 0,
                    "userId": "1828934419984322562",
                    "createTime": "2024-10-22 09:29:58",
                    "updateTime": "2025-06-26 10:50:00",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "0ohkme",
                    "hasChoiceQuestion": false
                },
                {
                    "id": "1780933294993469442",
                    "questionNum": "493",
                    "title": "Java 中的 synchronized 轻量级锁是否会进行自旋？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7051,
                    "thumbNum": 0,
                    "favourNum": 97,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:50:47",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "onh7n5",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1800771531284226050",
                    "questionNum": "991",
                    "title": "Synchronized 能不能禁止指令重排序？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 1639,
                    "thumbNum": 0,
                    "favourNum": 4,
                    "reviewStatus": 1,
                    "reviewMessage": "题解写的很粗糙，但题库中没有该题目，给题解做了一定补充",
                    "reviewerId": "1903103654707298305",
                    "reviewTime": "2025-04-08 17:08:33",
                    "needVip": 0,
                    "userId": "1783393747989405698",
                    "createTime": "2024-06-12 14:06:04",
                    "updateTime": "2025-06-26 10:55:49",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "n9lag9",
                    "hasChoiceQuestion": false
                },
                {
                    "id": "1780933294997663746",
                    "questionNum": "494",
                    "title": "当 Java 的 synchronized 升级到重量级锁后，所有线程都释放锁了，此时它还是重量级锁吗？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 6418,
                    "thumbNum": 0,
                    "favourNum": 109,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 00:09:39",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "xjgq9s",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295006052353",
                    "questionNum": "495",
                    "title": "什么是 Java 中的锁自适应自旋？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 6438,
                    "thumbNum": 0,
                    "favourNum": 78,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 00:10:33",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "0nmgn1",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933294976692225",
                    "questionNum": "491",
                    "title": "Synchronized 和 ReentrantLock 有什么区别？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 10779,
                    "thumbNum": 0,
                    "favourNum": 364,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 09:47:06",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "tr99vs",
                    "fileId": "1397757900240799233",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1906697042079703042",
                    "questionNum": "11373",
                    "title": "Volatile 与 Synchronized 的区别是什么？",
                    "content": "",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 1865,
                    "thumbNum": 0,
                    "favourNum": 25,
                    "reviewStatus": 1,
                    "reviewMessage": "重构题解，补充内容",
                    "reviewerId": "1903103654707298305",
                    "reviewTime": "2025-04-11 14:45:17",
                    "needVip": 0,
                    "userId": "1896503024259493889",
                    "createTime": "2025-03-31 21:16:14",
                    "updateTime": "2025-06-26 00:38:08",
                    "tagList": [
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "ggzphj",
                    "hasChoiceQuestion": false
                },
                {
                    "id": "1780933295010246658",
                    "questionNum": "496",
                    "title": "如何优化 Java 中的锁的使用？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7912,
                    "thumbNum": 0,
                    "favourNum": 138,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:32:30",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "8e82v0",
                    "fileId": "1397757900239811236",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295022829570",
                    "questionNum": "499",
                    "title": "你了解 Java 中的读写锁吗？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 6993,
                    "thumbNum": 0,
                    "favourNum": 82,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "source": "",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:07:12",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "ywfllk",
                    "hasChoiceQuestion": true
                }
            ],
            "total": "62",
            "size": "20",
            "current": "2",
            "orders": [],
            "optimizeCountSql": true,
            "searchCount": true,
            "pages": "4"
        },
        "message": "ok"
    },
    {
        "code": 0,
        "data": {
            "records": [
                {
                    "id": "1780933295031218178",
                    "questionNum": "501",
                    "title": "什么是 Java 内存模型（JMM）？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 9866,
                    "thumbNum": 0,
                    "favourNum": 312,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:53:55",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "d6uqig",
                    "fileId": "1397757900237819960",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295035412481",
                    "questionNum": "502",
                    "title": "什么是 Java 中的原子性、可见性和有序性？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 8163,
                    "thumbNum": 0,
                    "favourNum": 177,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:48:00",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "pqn481",
                    "fileId": "1397757900242381316",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295039606785",
                    "questionNum": "503",
                    "title": "什么是 Java 的 happens-before 规则？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 5171,
                    "thumbNum": 0,
                    "favourNum": 83,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "source": "",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 08:19:37",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "95nkrr",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295043801090",
                    "questionNum": "504",
                    "title": "什么是 Java 中的指令重排？",
                    "content": "",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 6245,
                    "thumbNum": 0,
                    "favourNum": 89,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:55:36",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "hg71vu",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295047995393",
                    "questionNum": "505",
                    "title": "Java 中的 final 关键字是否能保证变量的可见性？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7633,
                    "thumbNum": 0,
                    "favourNum": 104,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:05:39",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "wadf4z",
                    "fileId": "1397757905957349747",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295056384001",
                    "questionNum": "506",
                    "title": "为什么在 Java 中需要使用 ThreadLocal？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7412,
                    "thumbNum": 0,
                    "favourNum": 131,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:10:01",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "x9j5oe",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295064772609",
                    "questionNum": "507",
                    "title": "Java 中的 ThreadLocal 是如何实现线程资源隔离的？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7774,
                    "thumbNum": 0,
                    "favourNum": 218,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:21:38",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "xse2f1",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295073161218",
                    "questionNum": "509",
                    "title": "为什么 Java 中的 ThreadLocal 对 key 的引用为弱引用？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 7831,
                    "thumbNum": 0,
                    "favourNum": 174,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 1,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:58:14",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "yggazl",
                    "fileId": "1397757900241953607",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295077355521",
                    "questionNum": "510",
                    "title": "Java 中使用 ThreadLocal 的最佳实践是什么？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 6633,
                    "thumbNum": 0,
                    "favourNum": 82,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:23:30",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "w57z12",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295081549826",
                    "questionNum": "511",
                    "title": "Java 中的 InheritableThreadLocal 是什么？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 5154,
                    "thumbNum": 0,
                    "favourNum": 47,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:27:15",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "dc3gbm",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295085744130",
                    "questionNum": "512",
                    "title": "ThreadLocal 的缺点？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 6844,
                    "thumbNum": 0,
                    "favourNum": 91,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:28:12",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "7y2cga",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295094132737",
                    "questionNum": "514",
                    "title": "为什么 Netty 不使用 ThreadLocal 而是自定义了一个 FastThreadLocal ？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 6091,
                    "thumbNum": 0,
                    "favourNum": 93,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 1,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:28:55",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "n5d5v8",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295098327042",
                    "questionNum": "515",
                    "title": "什么是 Java 的 TransmittableThreadLocal？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 4683,
                    "thumbNum": 0,
                    "favourNum": 82,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 1,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-25 23:30:19",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "5p4xng",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1828715607393472514",
                    "questionNum": "5918",
                    "title": "Java 中 Thread.sleep 和 Thread.yield 的区别？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 5405,
                    "thumbNum": 0,
                    "favourNum": 66,
                    "reviewStatus": 1,
                    "needVip": 0,
                    "userId": "1783388929455529986",
                    "createTime": "2024-08-28 16:45:51",
                    "updateTime": "2025-06-26 01:07:55",
                    "tagList": [
                        "后端",
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "1n9l5y",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295102521345",
                    "questionNum": "516",
                    "title": "Java 中 Thread.sleep(0) 的作用是什么？",
                    "difficulty": 1,
                    "contentType": 0,
                    "viewNum": 7382,
                    "thumbNum": 0,
                    "favourNum": 86,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 08:19:48",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "w3umsn",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295106715650",
                    "questionNum": "517",
                    "title": "Java 中的 wait、notify 和 notifyAll 方法有什么作用？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 6233,
                    "thumbNum": 0,
                    "favourNum": 85,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:24:01",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "5j0ioz",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295110909953",
                    "questionNum": "518",
                    "title": "Java 中什么情况会导致死锁？如何避免？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 9348,
                    "thumbNum": 0,
                    "favourNum": 328,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:06:06",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "tgm7sd",
                    "fileId": "1397757900678378670",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295115104258",
                    "questionNum": "519",
                    "title": "Java 中 volatile 关键字的作用是什么？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 9653,
                    "thumbNum": 0,
                    "favourNum": 248,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 11:05:40",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "cwmuvm",
                    "fileId": "1397757901673286959",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1780933295123492866",
                    "questionNum": "520",
                    "title": "什么是 Java 中的 ABA 问题？",
                    "difficulty": 5,
                    "contentType": 0,
                    "viewNum": 8944,
                    "thumbNum": 0,
                    "favourNum": 107,
                    "reviewStatus": 1,
                    "reviewerId": "1770744203760979970",
                    "reviewTime": "2024-04-18 20:10:00",
                    "needVip": 0,
                    "userId": "1770744203760979970",
                    "createTime": "2024-04-18 20:16:00",
                    "updateTime": "2025-06-26 10:31:33",
                    "tagList": [
                        "Java并发",
                        "Java"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "3y2obf",
                    "fileId": "1397757900686979843",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1833403457677008897",
                    "questionNum": "6304",
                    "title": "在 Java 中主线程如何知晓创建的子线程是否执行成功？",
                    "difficulty": 3,
                    "contentType": 0,
                    "viewNum": 4974,
                    "thumbNum": 0,
                    "favourNum": 81,
                    "reviewStatus": 1,
                    "needVip": 0,
                    "userId": "1783388929455529986",
                    "createTime": "2024-09-10 15:13:41",
                    "updateTime": "2025-06-26 10:34:36",
                    "tagList": [
                        "后端",
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "skkyu3",
                    "hasChoiceQuestion": true
                }
            ],
            "total": "62",
            "size": "20",
            "current": "3",
            "orders": [],
            "optimizeCountSql": true,
            "searchCount": true,
            "pages": "4"
        },
        "message": "ok"
    },
    {
        "code": 0,
        "data": {
            "records": [
                {
                    "id": "1864580497852137473",
                    "questionNum": "10736",
                    "title": "Java 创建线程池有哪些方式？",
                    "difficulty": 1,
                    "contentType": 0,
                    "viewNum": 4359,
                    "thumbNum": 0,
                    "favourNum": 66,
                    "reviewStatus": 1,
                    "needVip": 0,
                    "userId": "1783388929455529986",
                    "createTime": "2024-12-05 16:00:07",
                    "updateTime": "2025-06-26 10:56:30",
                    "tagList": [
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "sokc21",
                    "hasChoiceQuestion": true
                },
                {
                    "id": "1864641723497508866",
                    "questionNum": "10738",
                    "title": "Java 线程安全的集合有哪些?",
                    "difficulty": 1,
                    "contentType": 0,
                    "viewNum": 4039,
                    "thumbNum": 0,
                    "favourNum": 59,
                    "reviewStatus": 1,
                    "needVip": 1,
                    "userId": "1783388929455529986",
                    "createTime": "2024-12-05 20:03:24",
                    "updateTime": "2025-06-26 10:49:33",
                    "tagList": [
                        "Java",
                        "Java并发"
                    ],
                    "hasVipAuth": false,
                    "hasBestAnswer": false,
                    "hasAnswer": false,
                    "isNew": false,
                    "shareCode": "di4zk5",
                    "hasChoiceQuestion": true
                }
            ],
            "total": "62",
            "size": "20",
            "current": "4",
            "orders": [],
            "optimizeCountSql": true,
            "searchCount": true,
            "pages": "4"
        },
        "message": "ok"
    },
    {
        "code": 0,
        "data": {
            "records": [],
            "total": "62",
            "size": "20",
            "current": "5",
            "orders": [],
            "optimizeCountSql": true,
            "searchCount": true,
            "pages": "4"
        },
        "message": "ok"
    }
]